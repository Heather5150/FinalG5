// <auto-generated />
using System;
using FinalG5.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FinalG5.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FinalG5.Models.BoardGames", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("AveragePlayTime")
                        .HasColumnType("float");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DifficultyLevel")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BoardGames");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AveragePlayTime = 0.14999999999999999,
                            Description = "Playing till no more cards in hand",
                            DifficultyLevel = 1,
                            Name = "Uno"
                        },
                        new
                        {
                            Id = 2,
                            AveragePlayTime = 3.5,
                            Description = "Buy all the properties you can and bankrupt your friends",
                            DifficultyLevel = 3,
                            Name = "Monopoly"
                        },
                        new
                        {
                            Id = 3,
                            AveragePlayTime = 8760.0,
                            Description = "Role playing board game to play with friends",
                            DifficultyLevel = 5,
                            Name = "Dungeons and Dragons"
                        });
                });

            modelBuilder.Entity("FinalG5.Models.Hobby", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("AverageTimeSpentPerWeek")
                        .HasColumnType("float");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DifficultyLevel")
                        .HasColumnType("int");

                    b.Property<bool>("IsOutdoorActivity")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Hobbies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AverageTimeSpentPerWeek = 5.5,
                            Description = "Riding a bike for leisure or exercise",
                            DifficultyLevel = 3,
                            IsOutdoorActivity = true,
                            Name = "Cycling"
                        },
                        new
                        {
                            Id = 2,
                            AverageTimeSpentPerWeek = 3.0,
                            Description = "Creating art using paint",
                            DifficultyLevel = 4,
                            IsOutdoorActivity = false,
                            Name = "Painting"
                        },
                        new
                        {
                            Id = 3,
                            AverageTimeSpentPerWeek = 6.0,
                            Description = "Walking trails in nature",
                            DifficultyLevel = 4,
                            IsOutdoorActivity = true,
                            Name = "Hiking"
                        });
                });
            modelBuilder.Entity("FinalG5.Models.Exercises", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                b.Property<double>("Repetitions")
                    .HasColumnType("int");

                b.Property<string>("Description")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<int>("Sets")
                    .HasColumnType("int");

                b.Property<bool>("RequiresEquipment")
                    .HasColumnType("bit");

                b.Property<string>("Name")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.HasKey("Id");

                b.ToTable("Hobbies");

                b.HasData(
                    new
                    {
                        Id = 1,
                        Repetitions = 10,
                        Description = "Moving your body with legs",
                        Sets = 3,
                        RequiresEquipment = false,
                        Name = "Squats"
                    },
                    new
                    {
                        Id = 2,
                        Repetitions = 12,
                        Description = "Moving your body with arms",
                        Sets = 2,
                        RequiresEquipment = false,
                        Name = "Squats"
                    },
                    new
                    {
                        Id = 3,
                        Repetitions = 8,
                        Description = "Moving your arms with dumbbells",
                        Sets = 5,
                        RequiresEquipment = true,
                        Name = "Bicep Curls"
                    });
            });

            modelBuilder.Entity("FinalG5.Models.TeamMember", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Birthdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CollegeProgram")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("YearInProgram")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TeamMembers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Birthdate = new DateTime(1975, 6, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CollegeProgram = "IT",
                            FullName = "Heather Gibson",
                            YearInProgram = "1"
                        },
                        new
                        {
                            Id = 1,
                            Birthdate = new DateTime(1975, 6, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CollegeProgram = "IT",
                            FullName = "Heather Gibson",
                            YearInProgram = "1"
                        },
                        new
                        {
                            Id = 1,
                            Birthdate = new DateTime(1975, 6, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CollegeProgram = "IT",
                            FullName = "Heather Gibson",
                            YearInProgram = "1"
                        });
                    });
#pragma warning restore 612, 618
        }
    }
}
